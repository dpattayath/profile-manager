# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      - run: 
          name: "prepare environment"
          command: |
            sudo apt update
            sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "api/composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: 
          name: "install dependencies"
          command: composer install -d api/ -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "api/composer.json" }}
          paths:
            - ./api/vendor

      - run:
          name: "create environment file and generate app key"
          command: |
            mv api/.env.testing .env
            php api/artisan key:generate

      - run:
          name: "create database and run migration"
          command: |
            touch api/storage/testing.sqlite
            php api/artisan migrate --env=testing

      - run:
          name: "run tests"
          command: ./api/vendor/bin/phpunit ./api/tests
      